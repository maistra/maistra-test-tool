apiVersion: maistra.io/v2
kind: ServiceMeshControlPlane
metadata:
  name: east-mesh
  namespace: east-mesh-system
spec:
  version: v2.3
#  runtime:
#    defaults:
#      container:
#        # for testing, to ensure we're always using the latest dev image
#        imagePullPolicy: Always
  addons:
    grafana:
      enabled: false
    kiali:
      enabled: false
    prometheus:
      enabled: true   # must be enabled, so we can get istio_requests_total metric from the sidecar
  tracing:
    type: None
  proxy:
    accessLogging:
      file:
        name: /dev/stdout
  gateways:
    additionalEgress:
      # egress gateway definition for sending requests from west-mesh
      west-mesh-egress:
        enabled: true
        requestedNetworkView:
        # we want to view services on west-mesh's network
        - network-west-mesh
        routerMode: sni-dnat
        service:
          metadata:
            labels:
              # to prevent west-mesh-egress's service from including default egress pods
              federation.maistra.io/egress-for: west-mesh
          ports:
          # required for sending service requests to west-mesh
          - port: 15443
            name: tls
          # required for sending discovery requests to west-mesh
          - port: 8188
            name: http-discovery
        runtime:
          deployment:
            autoScaling:
              enabled: false
          container:
            # constrain resources for use in smaller environments
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits: {}
    additionalIngress:
      # ingress gateway definition for handing requests from west-mesh
      west-mesh-ingress:
        enabled: true
        routerMode: sni-dnat
        service:
          type: LoadBalancer
          metadata:
            labels:
              # to prevent west-mesh-ingress's service from including default ingress pods
              federation.maistra.io/ingress-for: west-mesh
            annotations:
              # use the network load balancer on AWS
              service.beta.kubernetes.io/aws-load-balancer-type: nlb
          ports:
          # required for handling service requests from west-mesh
          - port: 15443
            name: tls
          # required for handing discovery requests from west-mesh
          - port: 8188
            name: https-discovery
        runtime:
          deployment:
            autoScaling:
              enabled: false
          container:
            # constrain resources for use in smaller environments
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits: {}
  security:
    dataPlane:
      mtls: true
    controlPlane:
      mtls: true
    trust:
      # unique trust domain for this mesh, east-mesh
      domain: east-mesh.local
